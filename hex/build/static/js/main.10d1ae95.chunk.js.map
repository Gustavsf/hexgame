{"version":3,"sources":["components/App/index.jsx","components/App/hexGame.jsx","index.jsx"],"names":["urlSearchParams","HexGame","radius","hostname","x","y","xOffSet","yOffSet","marginTop","this","getHexConfig","getOffSetConfig","getHexArray","document","body","style","zoom","fetchR","hexDivArray","arr","i","push","hexConfig","a","b","osConfig","last","length","offSetConfig","array","num","id","rowAmount","dataZ","dataX","dataY","z","className","data-x","data-y","data-z","data-value","transform","position","str","key","value","arr2","opt","check","lastHex","moved","reverse","isGood","smth","getElementById","dataValue","getAttribute","setAttribute","lastHex1","combined","action","getElementsByClassName","rad","c","combine","setAtr","cellArray","xs","parseInt","ys","zs","cell","direction","array1","getArrayString","getHexCells","moveHex","removeAnimation","checkGameOver","addColor","arr3","canMove","d","innerHTML","divArr","classList","remove","background","hexCells","url","fetch","method","JSON","stringify","then","response","json","hex","add","backgroundColor","window","location","href","split","URLSearchParams","history","replaceState","search","params","Object","fromEntries","entries","console","log","hexGame","start","hexArray","getHexArr","isReady","addEventListener","event","keyCode","fullMove","setTimeout","App","map","data-status","ReactDOM","render"],"mappings":"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","file":"static/js/main.10d1ae95.chunk.js","sourcesContent":["\nimport HexGame from \"./hexGame.jsx\"\nlet urlSearchParams;\nlet url = window.location.href.split(\"/\",4);\nif(url[3] == \"\"){\n  urlSearchParams = new URLSearchParams('?hostname=hex2048szb9jquj-hex15.functions.fnc.fr-par.scw.cloud&radius=2');\n  window.history.replaceState({}, '', `?hostname=hex2048szb9jquj-hex15.functions.fnc.fr-par.scw.cloud&radius=2`);\n} else {\n  urlSearchParams = new URLSearchParams(window.location.search);\n}\n\nconst params = Object.fromEntries(urlSearchParams.entries());\nlet radius = parseInt(params.radius);\nlet hostname = (params.hostname);\nconsole.log(hostname);\n\nlet hexGame = new HexGame(radius, hostname);\nhexGame.start();\nlet hexArray = hexGame.getHexArr();\nlet isReady = true;\n\ndocument.addEventListener('keydown', function(event) {\n  switch (event.keyCode) {\n    case 87:\n      if(isReady){\n      hexGame.fullMove('top');\n      isReady = false;\n      setTimeout(function(){\n        isReady=true;\n      }, 350);\n      }  \n      break;\n\n    case 69:\n      if(isReady){\n      hexGame.fullMove('topR');\n        setTimeout(function(){\n          isReady=true;\n        }, 350);\n        }\n      break;\n\n    case 81:\n      if(isReady){\n      hexGame.fullMove('topL');\n      isReady = false;\n        setTimeout(function(){\n          isReady=true;\n        }, 350);\n        }  \n      break;\n      \n    case 83:\n      if(isReady){\n      hexGame.fullMove('bot');\n      isReady = false;\n      setTimeout(function(){\n        isReady=true;\n      }, 350);\n      }\n      break;\n      \n    case 68:\n      if(isReady){\n      hexGame.fullMove('botR');\n      isReady = false;\n      setTimeout(function(){\n        isReady=true;\n      }, 350);\n      }\n      break;\n\n    case 65:\n      if(isReady){\n      hexGame.fullMove('botL');\n      isReady = false;\n      setTimeout(function(){\n        isReady=true;\n      }, 350);\n      }\n      break;\n\n    default:\n  }\n});\n\nexport const App = () => {\n  return (\n  <>\n    <div id=\"gameView\" style={{marginTop: radius*120}}>\n    {hexArray.map((hex)=>{\n      return hex;\n    })}\n    <div id=\"gameStatus\">Game Status: <span id=\"data-status\" data-status=\"playing\">playing</span></div>\n  </div> \n  </>\n  \n  );\n}\n","\r\nexport default class HexGame{\r\n    constructor(radius, hostname){\r\n        this.radius = radius;\r\n        this.hostname = hostname;\r\n    }\r\n    x = 0;\r\n    y = 0;\r\n    xOffSet = 53;\r\n    yOffSet = 90;\r\n    hexConfig;\r\n    offSetConfig;\r\n    hexDivArray;\r\n    marginTop = this.radius * 100;\r\n    \r\n    //initial setup\r\n    start(){\r\n      this.getHexConfig();\r\n      this.getOffSetConfig();\r\n      this.getHexArray();\r\n      if(this.radius >= 4){\r\n        document.body.style.zoom=0.8;\r\n      }\r\n      this.fetchR([]);\r\n    }\r\n    getHexArr(){\r\n      return this.hexDivArray;\r\n    }\r\n    //returns array if radius 3 then [3,4,5,4,3]\r\n    getHexConfig(){\r\n        let arr =[];\r\n        for(let i =0 ; i<(this.radius*2)-1;i++){\r\n          if(i < this.radius){\r\n            arr.push(this.radius+i);\r\n          }else {\r\n            arr.push(arr[i-1]-1);\r\n          }\r\n        }\r\n        this.hexConfig = arr;\r\n    }\r\n\r\n    //returns array [3,4,5,4,3] == [0, 0, 53, 90, 106, 180, 212, 180, 318, 180] => x and y position for hex cells\r\n    getOffSetConfig(){\r\n        let osConfig=[];\r\n        let last=[];\r\n        let a, b;\r\n        for(let i = 0; i<this.hexConfig.length; i++){\r\n          if(i === 0){\r\n            osConfig.push(0, 0);\r\n            last.push(0,0)\r\n          } else {\r\n            //if + then x+53;y+90, else x+106;y+0\r\n            if((this.hexConfig[i] - this.hexConfig[i-1])>0){\r\n              a = last[0]+this.xOffSet;\r\n              b = last[1]+this.yOffSet;\r\n              osConfig.push(a, b);\r\n              last = [];\r\n              last.push(a, b);       \r\n            }else {\r\n              a = last[0]+this.xOffSet*2;\r\n              b = last[1];\r\n              osConfig.push(a, b);\r\n              last = [];\r\n              last.push(a, b);     \r\n            }\r\n          }\r\n        }\r\n        this.offSetConfig = osConfig;\r\n      }\r\n\r\n    //Hex array with divs\r\n    getHexArray(){\r\n        let array = [];                            \r\n        let num = 1;        \r\n        let id = 0;\r\n        let rowAmount =this.hexConfig.length;\r\n      \r\n        let dataZ = this.radius-1;\r\n        for(let i = 0; i<rowAmount;i++){\r\n          let dataX = 0;\r\n          let dataY = -this.radius+1;\r\n      \r\n          if(i!==0){\r\n            if(i<(rowAmount+1)/2){\r\n              dataX = i;\r\n            }else {\r\n              dataX = this.radius-1;        \r\n            }\r\n            if(i>=this.radius){\r\n              dataY=-(rowAmount-i-1);        \r\n            }     \r\n          }     \r\n            this.x = this.offSetConfig[num-1];\r\n            this.y = this.offSetConfig[num];\r\n            for(let z = 0; z<this.hexConfig[i]; z++){\r\n              this.x = this.x + this.xOffSet;\r\n              this.y = this.y - this.yOffSet;\r\n              array.push(<div className=\"hexagon\" data-x={dataX} data-y={dataY} data-z={dataZ} data-value={''} id={id} key={id} \r\n              style={{transform: 'translate('+ this.x + 'px, '+ this.y +'px)', position:'absolute'}}></div>);\r\n              dataX-=1;\r\n              dataY+=1;\r\n              id++;                \r\n            }\r\n            dataZ--;\r\n            num = num + 2;     \r\n          }\r\n        this.hexDivArray = array;\r\n    }\r\n\r\n    //returns unique string from hexgame atributes\r\n    getArrayString(arr){\r\n      let str = \"\";\r\n      for (let key in arr) {\r\n        str = str + arr[key].x + arr[key].y + arr[key].z + arr[key].value;\r\n      }\r\n      return str;\r\n    }\r\n    \r\n    //moves cells, if there is free space\r\n    setAtr(arr2, num, opt, check){\r\n        let lastHex;\r\n        let moved = false;\r\n        if(opt === 'bot'){\r\n          arr2.reverse();\r\n        }\r\n          \r\n        let isGood = true;\r\n        for(let i = 0; i<this.hexConfig[num]; i++){\r\n          let smth = document.getElementById(arr2[this.hexConfig[num]-1-i]);\r\n          let dataValue = smth.getAttribute('data-value');\r\n          if(dataValue == 0 && isGood){\r\n             lastHex = smth;\r\n             isGood = false;\r\n             moved = true;\r\n\r\n          } else if(dataValue != 0 && !isGood){\r\n            if(check === true ){\r\n              lastHex.setAttribute('data-value', dataValue);\r\n              smth.setAttribute('data-value', '');\r\n            }\r\n            isGood = true;            \r\n          }\r\n        }\r\n        return moved;        \r\n    }\r\n    \r\n    //combines cells if same\r\n    combine(arr2, num, opt, check){\r\n        let lastHex1;\r\n        let combined = false;\r\n        if(opt === 'bot'){\r\n          arr2.reverse();\r\n        } \r\n      \r\n        let isGood = true;\r\n          for(let i = 0; i<this.hexConfig[num]; i++){\r\n            let smth = document.getElementById(arr2[this.hexConfig[num]-1-i]);\r\n            let dataValue = smth.getAttribute('data-value');\r\n      \r\n            if(dataValue != 0 && isGood){\r\n              lastHex1 = smth;\r\n              isGood = false;\r\n            } else if(dataValue != 0 && !isGood) {          \r\n              if(dataValue == lastHex1.getAttribute('data-value')){\r\n                if(check === true){\r\n                  lastHex1.setAttribute('data-value', dataValue*2);\r\n                  smth.setAttribute('data-value', '');\r\n                } \r\n                combined = true;\r\n                isGood = true;\r\n              }\r\n              lastHex1 = smth;\r\n            }\r\n          }\r\n          return combined;\r\n      }\r\n\r\n    moveHex(opt, action){\r\n        let arr = document.getElementsByClassName(\"hexagon\");\r\n        let arr2=[];\r\n        let num = 0;\r\n        let rad = -this.radius+1;\r\n      \r\n        for(let c =0; c<this.hexConfig.length; c++){\r\n          for(let i =0; i<arr.length;i++){\r\n            let x = arr[i].getAttribute('data-x');\r\n            let y = arr[i].getAttribute('data-y');\r\n            let z = arr[i].getAttribute('data-z');\r\n            let id = arr[i].getAttribute('id');\r\n            if((opt === \"top\") && (x == rad)){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){              \r\n                if(action === \"combine\"){\r\n                  this.combine(arr2, num, \"top\", true);\r\n                } else {\r\n                  this.setAtr(arr2, num, \"top\", true);\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }              \r\n            }\r\n            if((opt === \"topR\") && (y == -rad)){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(action === \"combine\"){\r\n                  this.combine(arr2, num, \"top\", true);\r\n                } else {\r\n                  this.setAtr(arr2, num, \"top\", true);\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"topL\") && (z == rad)){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(action === \"combine\"){\r\n                  this.combine(arr2, num, \"top\", true);\r\n                } else {\r\n                  this.setAtr(arr2, num, \"top\", true);\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"bot\") && (x == -rad)){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(action === \"combine\"){\r\n                  this.combine(arr2, num, \"bot\", true);\r\n                } else {\r\n                  this.setAtr(arr2, num, \"bot\", true);\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"botR\") && (z == -rad)){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(action === \"combine\"){\r\n                  this.combine(arr2, num, \"bot\", true);\r\n                } else {\r\n                  this.setAtr(arr2, num, \"bot\", true);\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"botL\") && (y == rad)){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(action === \"combine\"){\r\n                  this.combine(arr2, num, \"bot\", true);\r\n                } else {\r\n                  this.setAtr(arr2, num, \"bot\", true);\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }   \r\n          }      \r\n          rad++;    \r\n        }\r\n      }\r\n      //get query for server request\r\n    getHexCells(){\r\n      let arr = document.getElementsByClassName('hexagon');\r\n      let cellArray = [];\r\n      let dataValue;      \r\n      for(let i =0; i<arr.length;i++){\r\n        let xs = parseInt(arr[i].getAttribute('data-x'));\r\n        let ys= parseInt(arr[i].getAttribute('data-y'));\r\n        let zs = parseInt(arr[i].getAttribute('data-z'));\r\n        if(arr[i].getAttribute('data-value')){\r\n          dataValue = parseInt(arr[i].getAttribute('data-value'));\r\n        } else {\r\n          dataValue = 0;\r\n        }\r\n\r\n        if(dataValue !== 0){\r\n          let cell = { x:xs, y:ys, z:zs, value:dataValue };\r\n          cellArray.push(cell);\r\n        }\r\n        \r\n      }\r\n      return cellArray;\r\n    }\r\n    //shift and combine, request cells from server\r\n    fullMove(direction){\r\n      let array1 = this.getArrayString(this.getHexCells());\r\n      for(let i = 0; i<this.radius; i++){        \r\n        this.moveHex(direction, \"shift\");\r\n      }\r\n      this.moveHex(direction, \"combine\");\r\n      this.moveHex(direction, \"shift\");\r\n      let array2 = this.getArrayString(this.getHexCells());\r\n      if(array1 !== array2){\r\n        this.removeAnimation();\r\n        this.fetchR(this.getHexCells());       \r\n      } else {\r\n        this.checkGameOver();       \r\n      }\r\n      this.addColor();     \r\n    }\r\n\r\n    checkGameOver(){\r\n      let arr3 = [\"top\", \"topR\", \"topL\",\"bot\", \"botR\", \"botL\"];\r\n      let arr = document.getElementsByClassName(\"hexagon\");\r\n        let arr2=[];\r\n        let canMove = false;\r\n      for(let d = 0; d<arr3.length;d++){\r\n        let opt = arr3[d];\r\n        let rad = -this.radius+1;\r\n        let num = 0;\r\n\r\n        for(let c =0; c<this.hexConfig.length; c++){\r\n          for(let i =0; i<arr.length;i++){\r\n            let x = arr[i].getAttribute('data-x');\r\n            let y = arr[i].getAttribute('data-y');\r\n            let z = arr[i].getAttribute('data-z');\r\n            let id = arr[i].getAttribute('id');\r\n            if((opt === \"top\") && (x == rad) && canMove == false){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){  \r\n                if(this.combine(arr2, num, \"top\", false)){\r\n                  canMove = true;\r\n                } \r\n                if(this.setAtr(arr2, num, \"top\", false)){\r\n                  canMove = true;\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }              \r\n            }\r\n            if((opt === \"topR\") && (y == -rad) && canMove == false){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(this.combine(arr2, num, \"top\", false)){\r\n                  canMove = true;\r\n                }\r\n                if(this.setAtr(arr2, num, \"top\", false)){\r\n                  canMove = true;\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"topL\") && (z == rad) && canMove == false){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(this.combine(arr2, num, \"top\", false)){\r\n                  canMove = true;\r\n                }\r\n                if(this.setAtr(arr2, num, \"top\", false)){\r\n                  canMove = true;\r\n                }\r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"bot\") && (x == -rad) && canMove == false){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(this.combine(arr2, num, \"bot\", false)){\r\n                  canMove = true;\r\n                } \r\n                if(this.setAtr(arr2, num, \"bot\", false)){\r\n                  canMove = true;\r\n                } \r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"botR\") && (z == -rad) && canMove == false){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(this.combine(arr2, num, \"bot\", false)){\r\n                  canMove = true;\r\n                } \r\n                if(this.setAtr(arr2, num, \"bot\", false)){\r\n                  canMove = true;\r\n                } \r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }\r\n            if((opt === \"botL\") && (y == rad) && canMove == false){\r\n              arr2.push(id);       \r\n              if(arr2.length === this.hexConfig[num]){\r\n                if(this.combine(arr2, num, \"bot\", false)){\r\n                  canMove = true;\r\n                } \r\n                if(this.setAtr(arr2, num, \"bot\", false)){\r\n                  canMove = true;\r\n                } \r\n                num++;\r\n                arr2=[];\r\n              }\r\n            }   \r\n          }      \r\n          rad++;    \r\n        }\r\n      }\r\n      if(!canMove){\r\n        document.getElementById('data-status').innerHTML = \"Game-over\";\r\n        document.getElementById('data-status').setAttribute('data-status', 'game-over');\r\n      }\r\n      return canMove;\r\n    }\r\n    //remove appear animation\r\n    removeAnimation() {\r\n      let divArr = document.getElementsByClassName('hexagon');\r\n      for(let i = 0; i<divArr.length;i++){\r\n        divArr[i].classList.remove('appear');\r\n      }\r\n    }\r\n    //adds color based on data-value\r\n    addColor(){\r\n      let divArr = document.getElementsByClassName('hexagon');\r\n      for(let i = 0; i<divArr.length;i++){\r\n        let dataValue = divArr[i].getAttribute('data-value');\r\n        if(dataValue == 0){\r\n          divArr[i].style.background = 'rgb(0,250,255)';\r\n        }\r\n        if(dataValue === '2'){\r\n          divArr[i].style.background = 'rgb(0,220,255)';\r\n        }\r\n        if(dataValue === '4'){\r\n          divArr[i].style.background = 'rgb(0,184,255)';\r\n        }\r\n        if(dataValue === '8'){\r\n          divArr[i].style.background = 'rgb(0,154,255)';\r\n        }\r\n        if(dataValue === '16'){\r\n          divArr[i].style.background = 'rgb(0,30,255)';\r\n        }\r\n        if(dataValue === '32'){\r\n          divArr[i].style.background = 'rgb(0,5,255)';\r\n        }\r\n        if(dataValue === '64'){\r\n          divArr[i].style.background = 'rgb(189,0,255)';\r\n        }\r\n        if(dataValue === '128'){\r\n          divArr[i].style.background = 'rgb(214,0,255)';\r\n        }\r\n        if(parseInt(dataValue) > 128){\r\n          divArr[i].style.background = 'rgb(170,0,255)';\r\n\r\n        }\r\n      }\r\n    }\r\n    //fetch random cells from server\r\n    fetchR(hexCells) {\r\n      let divArr = document.getElementsByClassName('hexagon');\r\n      let url = 'https://'+this.hostname+'/'+this.radius+'';\r\n      const response = fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(hexCells),\r\n      }).then((response) => response.json())\r\n        .then((hex) => {\r\n          for(let i = 0; i<hex.length;i++){\r\n            let x = hex[i].x;\r\n            let y = hex[i].y;\r\n            let z = hex[i].z;\r\n            let value = hex[i].value;\r\n                \r\n          for(let i = 0; i<divArr.length;i++){\r\n            if(x == divArr[i].getAttribute('data-x') && y == divArr[i].getAttribute('data-y')\r\n            && z == divArr[i].getAttribute('data-z')){\r\n              divArr[i].classList.add('appear');\r\n              divArr[i].setAttribute('data-value', value);\r\n              if(value == 2){\r\n                  divArr[i].style.backgroundColor = \"rgb(0,220,255)\";\r\n              } else {\r\n                  divArr[i].style.backgroundColor = 'rgb(0,184,255)';\r\n              }\r\n            }\r\n          }\r\n          this.checkGameOver();\r\n        }         \r\n    });        \r\n  }\r\n}","import ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport { App } from \"./components/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}